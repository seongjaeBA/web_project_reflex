{"version":3,"file":"perfMetter.js","names":["path","EventEmitter","replacer","key","value","Map","Array","from","entries","reduce","obj","k","v","printTimings","timings","startedAt","sourceRoot","size","console","log","performance","now","toFixed","forEach","label","byLabel","array","time","name","startsWith","relative","createPerfMeter","options","emitter","dummy","onDone","addTiming","has","set","forLabel","get","Math","round","processedFiles","processDependencyEvent","file","only","imports","exports","passes","processed","processSingleEvent","meta","type","startTimes","Object","startTime","String","print","filename","fs","require","writeFileSync","JSON","stringify"],"sources":["../../src/debug/perfMetter.ts"],"sourcesContent":["/* eslint-disable no-console */\nimport path from 'path';\n\nimport { EventEmitter } from '../EventEmitter';\n\ntype Timings = Map<string, Map<string, number>>;\n\nexport interface IPerfMeterOptions {\n  filename?: string;\n  print?: boolean;\n}\n\ninterface IProcessedFile {\n  exports: string[];\n  imports: { from: string; what: string[] }[];\n  passes: number;\n}\n\nexport interface IProcessedEvent {\n  type: 'dependency';\n  file: string;\n  only: string[];\n  imports: { from: string; what: string[] }[];\n}\n\nfunction replacer(key: string, value: unknown) {\n  if (value instanceof Map) {\n    return Array.from(value.entries()).reduce(\n      (obj, [k, v]) => ({\n        ...obj,\n        [k]: v,\n      }),\n      {}\n    );\n  }\n\n  return value;\n}\n\nfunction printTimings(timings: Timings, startedAt: number, sourceRoot: string) {\n  if (timings.size === 0) {\n    return;\n  }\n\n  console.log(`\\nTimings:`);\n  console.log(`  Total: ${(performance.now() - startedAt).toFixed()}ms`);\n\n  Array.from(timings.entries()).forEach(([label, byLabel]) => {\n    console.log(`\\n  By ${label}:`);\n\n    const array = Array.from(byLabel.entries());\n    // array.sort(([, a], [, b]) => b - a);\n    array.forEach(([value, time]) => {\n      const name = value.startsWith(sourceRoot)\n        ? path.relative(sourceRoot, value)\n        : value;\n      console.log(`    ${name}: ${time}ms`);\n    });\n  });\n}\n\nexport const createPerfMeter = (\n  options: IPerfMeterOptions | boolean = true\n) => {\n  if (!options) {\n    return {\n      emitter: EventEmitter.dummy,\n      onDone: () => {},\n    };\n  }\n\n  const startedAt = performance.now();\n  const timings: Timings = new Map();\n  const addTiming = (label: string, key: string, value: number) => {\n    if (!timings.has(label)) {\n      timings.set(label, new Map());\n    }\n\n    const forLabel = timings.get(label)!;\n    forLabel.set(key, Math.round((forLabel.get(key) || 0) + value));\n  };\n\n  const processedFiles = new Map<string, IProcessedFile>();\n  const processDependencyEvent = ({ file, only, imports }: IProcessedEvent) => {\n    if (!processedFiles.has(file)) {\n      processedFiles.set(file, {\n        exports: [],\n        imports: [],\n        passes: 0,\n      });\n    }\n\n    const processed = processedFiles.get(file)!;\n    processed.passes += 1;\n    processed.exports = only;\n    processed.imports = imports;\n  };\n\n  const processSingleEvent = (\n    meta: Record<string, unknown> | IProcessedEvent\n  ) => {\n    if (meta.type === 'dependency') {\n      processDependencyEvent(meta as IProcessedEvent);\n    }\n  };\n\n  const startTimes = new Map<string, number>();\n  const emitter = new EventEmitter((meta, type) => {\n    if (type === 'single') {\n      processSingleEvent(meta);\n      return;\n    }\n\n    if (type === 'start') {\n      Object.entries(meta).forEach(([label, value]) => {\n        startTimes.set(`${label}\\0${value}`, performance.now());\n      });\n    } else {\n      Object.entries(meta).forEach(([label, value]) => {\n        const startTime = startTimes.get(`${label}\\0${value}`);\n        if (startTime) {\n          addTiming(label, String(value), performance.now() - startTime);\n        }\n      });\n    }\n  });\n\n  return {\n    emitter,\n    onDone: (sourceRoot: string) => {\n      if (options === true || options.print) {\n        printTimings(timings, startedAt, sourceRoot);\n      }\n\n      if (options !== true && options.filename) {\n        const fs = require('fs');\n        fs.writeFileSync(\n          options.filename,\n          JSON.stringify({ processedFiles, timings }, replacer, 2)\n        );\n      }\n    },\n  };\n};\n"],"mappings":"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"}