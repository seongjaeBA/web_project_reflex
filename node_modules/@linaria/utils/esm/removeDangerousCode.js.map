{"version":3,"file":"removeDangerousCode.js","names":["nonType","isUnnecessaryReactCall","removeWithRelated","JSXElementsRemover","isGlobal","id","scope","name","node","hasBinding","hasGlobal","forbiddenGlobals","Set","isBrowserGlobal","has","getPropertyName","path","isIdentifier","isStringLiteral","value","removeDangerousCode","programPath","traverse","CallExpression","enter","p","JSXElement","JSXFragment","MemberExpression","state","obj","get","prop","windowScoped","add","globals","filter","MetaProperty","Identifier","find","parent","isTSTypeReference","parentPath","isUnaryExpression","operator","isTSTypeQuery","isClassProperty","isMemberExpression","key","push"],"sources":["../src/removeDangerousCode.ts"],"sourcesContent":["import type { NodePath } from '@babel/core';\nimport type { Identifier, Program } from '@babel/types';\n\nimport { nonType } from './findIdentifiers';\nimport isUnnecessaryReactCall from './isUnnecessaryReactCall';\nimport { removeWithRelated } from './scopeHelpers';\nimport JSXElementsRemover from './visitors/JSXElementsRemover';\n\nconst isGlobal = (id: NodePath<Identifier>): boolean => {\n  if (!nonType(id)) {\n    return false;\n  }\n\n  const { scope } = id;\n  const { name } = id.node;\n  return !scope.hasBinding(name) && scope.hasGlobal(name);\n};\n\nconst forbiddenGlobals = new Set([\n  'XMLHttpRequest',\n  'clearImmediate',\n  'clearInterval',\n  'clearTimeout',\n  'document',\n  'fetch',\n  'localStorage',\n  'location',\n  'navigator',\n  'sessionStorage',\n  'setImmediate',\n  'setInterval',\n  'setTimeout',\n  'window',\n]);\n\nconst isBrowserGlobal = (id: NodePath<Identifier>) => {\n  return forbiddenGlobals.has(id.node.name) && isGlobal(id);\n};\n\nconst getPropertyName = (path: NodePath): string | null => {\n  if (path.isIdentifier()) {\n    return path.node.name;\n  }\n\n  if (path.isStringLiteral()) {\n    return path.node.value;\n  }\n\n  return null;\n};\n\nexport const removeDangerousCode = (programPath: NodePath<Program>) => {\n  programPath.traverse(\n    {\n      // JSX can be replaced with a dummy value,\n      // but we have to do it after we processed template tags.\n      CallExpression: {\n        enter(p) {\n          if (isUnnecessaryReactCall(p)) {\n            JSXElementsRemover(p);\n          }\n        },\n      },\n      JSXElement: {\n        enter: JSXElementsRemover,\n      },\n      JSXFragment: {\n        enter: JSXElementsRemover,\n      },\n      MemberExpression(p, state) {\n        const obj = p.get('object');\n        const prop = p.get('property');\n        if (!obj.isIdentifier({ name: 'window' })) {\n          return;\n        }\n\n        const name = getPropertyName(prop);\n        if (!name) {\n          return;\n        }\n\n        state.windowScoped.add(name);\n        // eslint-disable-next-line no-param-reassign\n        state.globals = state.globals.filter((id) => {\n          if (id.node.name === name) {\n            removeWithRelated([id]);\n            return false;\n          }\n\n          return true;\n        });\n      },\n      MetaProperty(p) {\n        // Remove all references to `import.meta`\n        removeWithRelated([p]);\n      },\n      Identifier(p, state) {\n        if (p.find((parent) => parent.isTSTypeReference())) {\n          // don't mess with TS type references\n          return;\n        }\n        if (isBrowserGlobal(p)) {\n          if (\n            p.find(\n              (parentPath) =>\n                parentPath.isUnaryExpression({ operator: 'typeof' }) ||\n                parentPath.isTSTypeQuery()\n            )\n          ) {\n            // Ignore `typeof window` expressions\n            return;\n          }\n\n          if (p.parentPath.isClassProperty()) {\n            // ignore class property decls\n            return;\n          }\n          if (p.parentPath.isMemberExpression() && p.key === 'property') {\n            // ignore e.g this.fetch()\n            // window.fetch will be handled by the windowScoped block below\n            return;\n          }\n\n          removeWithRelated([p]);\n\n          return;\n        }\n\n        if (state.windowScoped.has(p.node.name)) {\n          removeWithRelated([p]);\n        } else if (isGlobal(p)) {\n          state.globals.push(p);\n        }\n      },\n    },\n    {\n      globals: [] as NodePath<Identifier>[],\n      windowScoped: new Set<string>(),\n    }\n  );\n};\n"],"mappings":"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"}