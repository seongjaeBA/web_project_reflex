{"version":3,"file":"perfMetter.js","names":["_path","_interopRequireDefault","require","_EventEmitter","obj","__esModule","default","replacer","key","value","Map","Array","from","entries","reduce","k","v","printTimings","timings","startedAt","sourceRoot","size","console","log","performance","now","toFixed","forEach","label","byLabel","array","time","name","startsWith","path","relative","createPerfMeter","options","emitter","EventEmitter","dummy","onDone","addTiming","has","set","forLabel","get","Math","round","processedFiles","processDependencyEvent","file","only","imports","exports","passes","processed","processSingleEvent","meta","type","startTimes","Object","startTime","String","print","filename","fs","writeFileSync","JSON","stringify"],"sources":["../../src/debug/perfMetter.ts"],"sourcesContent":["/* eslint-disable no-console */\nimport path from 'path';\n\nimport { EventEmitter } from '../EventEmitter';\n\ntype Timings = Map<string, Map<string, number>>;\n\nexport interface IPerfMeterOptions {\n  filename?: string;\n  print?: boolean;\n}\n\ninterface IProcessedFile {\n  exports: string[];\n  imports: { from: string; what: string[] }[];\n  passes: number;\n}\n\nexport interface IProcessedEvent {\n  type: 'dependency';\n  file: string;\n  only: string[];\n  imports: { from: string; what: string[] }[];\n}\n\nfunction replacer(key: string, value: unknown) {\n  if (value instanceof Map) {\n    return Array.from(value.entries()).reduce(\n      (obj, [k, v]) => ({\n        ...obj,\n        [k]: v,\n      }),\n      {}\n    );\n  }\n\n  return value;\n}\n\nfunction printTimings(timings: Timings, startedAt: number, sourceRoot: string) {\n  if (timings.size === 0) {\n    return;\n  }\n\n  console.log(`\\nTimings:`);\n  console.log(`  Total: ${(performance.now() - startedAt).toFixed()}ms`);\n\n  Array.from(timings.entries()).forEach(([label, byLabel]) => {\n    console.log(`\\n  By ${label}:`);\n\n    const array = Array.from(byLabel.entries());\n    // array.sort(([, a], [, b]) => b - a);\n    array.forEach(([value, time]) => {\n      const name = value.startsWith(sourceRoot)\n        ? path.relative(sourceRoot, value)\n        : value;\n      console.log(`    ${name}: ${time}ms`);\n    });\n  });\n}\n\nexport const createPerfMeter = (\n  options: IPerfMeterOptions | boolean = true\n) => {\n  if (!options) {\n    return {\n      emitter: EventEmitter.dummy,\n      onDone: () => {},\n    };\n  }\n\n  const startedAt = performance.now();\n  const timings: Timings = new Map();\n  const addTiming = (label: string, key: string, value: number) => {\n    if (!timings.has(label)) {\n      timings.set(label, new Map());\n    }\n\n    const forLabel = timings.get(label)!;\n    forLabel.set(key, Math.round((forLabel.get(key) || 0) + value));\n  };\n\n  const processedFiles = new Map<string, IProcessedFile>();\n  const processDependencyEvent = ({ file, only, imports }: IProcessedEvent) => {\n    if (!processedFiles.has(file)) {\n      processedFiles.set(file, {\n        exports: [],\n        imports: [],\n        passes: 0,\n      });\n    }\n\n    const processed = processedFiles.get(file)!;\n    processed.passes += 1;\n    processed.exports = only;\n    processed.imports = imports;\n  };\n\n  const processSingleEvent = (\n    meta: Record<string, unknown> | IProcessedEvent\n  ) => {\n    if (meta.type === 'dependency') {\n      processDependencyEvent(meta as IProcessedEvent);\n    }\n  };\n\n  const startTimes = new Map<string, number>();\n  const emitter = new EventEmitter((meta, type) => {\n    if (type === 'single') {\n      processSingleEvent(meta);\n      return;\n    }\n\n    if (type === 'start') {\n      Object.entries(meta).forEach(([label, value]) => {\n        startTimes.set(`${label}\\0${value}`, performance.now());\n      });\n    } else {\n      Object.entries(meta).forEach(([label, value]) => {\n        const startTime = startTimes.get(`${label}\\0${value}`);\n        if (startTime) {\n          addTiming(label, String(value), performance.now() - startTime);\n        }\n      });\n    }\n  });\n\n  return {\n    emitter,\n    onDone: (sourceRoot: string) => {\n      if (options === true || options.print) {\n        printTimings(timings, startedAt, sourceRoot);\n      }\n\n      if (options !== true && options.filename) {\n        const fs = require('fs');\n        fs.writeFileSync(\n          options.filename,\n          JSON.stringify({ processedFiles, timings }, replacer, 2)\n        );\n      }\n    },\n  };\n};\n"],"mappings":"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"}